<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a9petZojTM8yrlbz+mcdD5zmBbIjgvfXeiT4uoo0ra+N/dfMkW2vKK2h5CTXdWoD6pHh5FHkAMC1246r
        deXqrPutHmq9kF4PuNgeFTS0rr91vG5dPVr3Ip15BWnbupo0A9/Ru9v1+IAynACAN24dC1wPs1hXr559
        YK3W/Vjbe7Km9T5Yjg8+T9urRdtRtI7VTSc+qOGx5lTWOnK3RpLXzG/LwwPKcAIA+Mkco9pewZrm9dCz
        HhF8qu3o2g+vad23tW8/Km6p/b9l2v6bp7nat/24nPhAhmPaD6QZ3vP14a167senA2p9ET7wxTJPwDGc
        AAA+t0bWNPevbI8KXnRo1daDM45pPWTjUPsxU7rA4Kmt43UPjSOvgdn6dEA90FzGtqgBAJ7H3POyXpSv
        K1rT/LF6vYB/seODd9b6eG5H0fZYnWHEKQ4OKMMJAOA6bEfXfnhN676tbWe/d9Yrt47KbVsPX1itp9Wt
        vHblEj4bUIYTAMDbth6ccUzrIRuH2h53q3nNyS36ZEDN/wEAAMDDDCgAAIDIgAIAAIgMKAAAgMiAAgAA
        iAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAA
        gMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIA
        AIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgA
        AIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIAC
        AACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwo
        AACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiA
        AgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgM
        KAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDI
        gAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACI
        DCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACA
        yIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAA
        iAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAA
        gMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIA
        AIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgA
        AIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIAC
        AACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwo
        AACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiA
        AgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgM
        KAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDI
        gAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACI
        DCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACA
        yIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAA
        iAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAA
        gMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIA
        AIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgA
        AIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIAC
        AACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwo
        AACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiA
        AgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgM
        KAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDI
        gAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACI
        DCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACA
        yIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAA
        iAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAA
        gMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIA
        AIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgA
        AIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIAC
        AACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwo
        AACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiA
        AgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgMKAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDIgAIAAIgM
        KAAAgMiAAgAAiAwoAACAyIACAACIDCgAAIDokwElSZIkSUp99j9IkiRJkh7us/9BkiRJkvRA/w+fTHFH
        ivdlaAAAAABJRU5ErkJggg==
</value>
  </data>
</root>